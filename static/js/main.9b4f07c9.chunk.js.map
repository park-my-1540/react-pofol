{"version":3,"sources":["component/MsgComp.js","component/Main.js","module/messages.js","container/MessageContainer.js","App.js","reportWebVitals.js","module/index.js","index.js"],"names":["Main","msgState","msg","time","className","msgList","onLoading","onAddAsync","onUpdated","useEffect","timeFuction","setTimeout","useState","inputs","setInputs","nextId","useRef","fadeChat","rand_1_fatChat","Math","floor","random","length","target","current","objDiv","document","getElementById","offsetHeight","scrollTop","scrollHeight","callback","today","Date","hours","getHours","slice","minutes","getMinutes","sendMsg","class","id","map","text","type","placeholder","value","onChange","e","onKeyDown","keyCode","onClick","UPDATE","CHANGE_MSG","SET_TIME","change_msgAsync","dispatch","msgs","change_msg","set_timeAsync","string","set_time","initalState","MessageContainer","useSelector","state","messages","useDispatch","update_msg","loading","onsetTimeAsync","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","concat","store","createStore","applyMiddleware","ReduxThunk","logger","ReactDOM","render"],"mappings":"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","file":"static/js/main.9b4f07c9.chunk.js","sourcesContent":["export default function Main({msgState,msg,time}){\r\n    var msgMe = (\r\n        <div className=\"msg-box\">\r\n            <p className=\"profile-img\"></p>\r\n            <div className=\"msg-txt me\">\r\n                <p className=\"txt\">\r\n                    {msg}\r\n                </p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    var msgYou = (\r\n        <div className=\"msg-box\">\r\n            <div className=\"msg-txt you\">\r\n                <p className=\"txt\">{msg}</p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    var msgLoading = (\r\n        <div className=\"msg-box loading\">\r\n            <p className=\"profile-img\"></p>\r\n            <div className=\"msg-txt\">\r\n                <div className=\"txt\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    if(msgState === \"msgMe\"){\r\n        return (msgMe)\r\n    }else if(msgState === \"msgYou\"){\r\n        return msgYou\r\n    }\r\n    else if(msgState === \"msgLoading\"){\r\n        return msgLoading\r\n    }\r\n}","import React,{useEffect,useState,useRef} from \"react\"\r\nimport MsgComp from \"../component/MsgComp\";\r\nexport default function Main({msgList,onLoading,onAddAsync,onUpdated}){\r\n\r\n    \r\n    useEffect(()=>{\r\n    chatStart();\r\n    },[]);\r\n\r\n    const [inputs,setInputs] = useState();\r\n    const nextId = useRef(2);\r\n    const fadeChat = ['집에가고 싶어요','오늘은 수능','월급좀 많이주세요','퇴근하고 싶어요'];\r\n    const rand_1_fatChat = Math.floor(Math.random() * (fadeChat.length-1)) + 1\r\n\r\n    useEffect(()=>{\r\n        /**\r\n         * msgList 가 변경 되는 시점에 마지막 메시지가 입력 메시지면\r\n         * 답장 메시지 출력\r\n         * msg-box가 스크롤을 넘어가면 마지막 메시지에 보이게 스크롤 이동\r\n         */\r\n        if(msgList.length && msgList[msgList.length-1].target === \"msgYou\"){\r\n            setTimeout(()=>{\r\n                onLoading(nextId.current);\r\n                onAddAsync(nextId.current++,\"msgMe\", fadeChat[rand_1_fatChat],timeFuction());\r\n            },2000)\r\n        }\r\n        var objDiv = document.getElementById(\"content\");\r\n        \r\n        if(msgList.length && objDiv.offsetHeight>400){ //스크롤 마지막 메시지로 이동\r\n            objDiv.scrollTop = objDiv.scrollHeight;\r\n        }\r\n    },[msgList])\r\n    \r\n     /**\r\n     * timeFuction : 메세지 보내는 시간 세팅 함수\r\n     */\r\n    const timeFuction = function(callback){\r\n        let today = new Date(),\r\n            hours = ('0' + today.getHours()).slice(-2),\r\n            minutes = ('0' + today.getMinutes()).slice(-2),\r\n            string = `${hours}:${minutes}`;\r\n        return string;\r\n    }\r\n    /**\r\n     * chartStart : 초기 메시지 노출\r\n     * loading후 메시지 노출되게\r\n     */\r\n    function chatStart(){\r\n        onLoading(0);\r\n        onAddAsync(0,\"msgMe\", \"안녕하세요\",timeFuction());\r\n        setTimeout(()=>{\r\n            onLoading(1);\r\n            onAddAsync(1,\"msgMe\", \"안녕하세요222\",timeFuction());\r\n        },2000)\r\n    }\r\n    /**\r\n     * sendMsg : 입력 메시지 노출\r\n     */\r\n    function sendMsg(){\r\n        onUpdated(nextId.current++,\"msgYou\", inputs,timeFuction());\r\n        setInputs('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"main\">\r\n                <div className=\"main-box\">\r\n                    <div className=\"header\">\r\n                        <p className=\"profile-img\"></p>\r\n                        <div class=\"cont\">\r\n                            <p className=\"txt\">PARKMEEYOUNG</p>\r\n                            <p className=\"time\">KOREA</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\" id=\"content\">\r\n                        {\r\n                          msgList && msgList.map((msg)=><MsgComp msgState={msg.target} msg={msg.text} time={msg.time}/>)\r\n                        }\r\n                    </div>\r\n                    <div className=\"send-box\">\r\n                        <input type=\"text\" placeholder=\"Type message...\" value={inputs} class=\"txt-input\" onChange={(e)=>{setInputs(e.target.value)}} onKeyDown={(e)=>{if(e.keyCode === 13){sendMsg()}}}></input>\r\n                        <button type=\"button\" class=\"btn-send\" onClick={sendMsg}>SEND</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}","const UPDATE = 'message/update'; //현재 상태 변경  -> \r\nconst CHANGE_MSG = 'message/change_msg'; // loading 중인 상태를 변경하고 text 받아서 노출시킴\r\nconst SET_TIME = 'message/set_time'; // 시간 세팅\r\n\r\nexport const loading = (id) => ({ //로딩중\r\n    type:UPDATE,\r\n    msgs:{\r\n        id ,\r\n        target:\"msgLoading\",\r\n        text:'',\r\n    }\r\n})\r\nexport const update_msg = (id,target,text,time) => ({ // 새로운 메시지 노출 시킴\r\n    type:UPDATE,\r\n    msgs:{\r\n        id , \r\n        target,\r\n        text,\r\n        time\r\n    }\r\n})\r\nexport const change_msg = (id,target,text,time) => ({ // loading 중인 상태를 변경하고 text 받아서 노출시킴\r\n    type: CHANGE_MSG,\r\n    msgs: {\r\n      id ,\r\n      target,\r\n      text,\r\n      time \r\n    }\r\n  });\r\n\r\nexport const set_time = (id,time) => ({type:SET_TIME,time,id})\r\n\r\n/* 비동기 액션생성 함수 */\r\nexport const change_msgAsync  = (id,target,text,time) => dispatch => {\r\n    setTimeout(() => dispatch(change_msg(id,target,text,time)), 2000);\r\n}\r\nexport const set_timeAsync = (id) => dispatch => {\r\n    let today = new Date(),\r\n        hours = ('0' + today.getHours()).slice(-2),\r\n        minutes = ('0' + today.getMinutes()).slice(-2),\r\n        string = `${hours}:${minutes}`;\r\n        \r\n    dispatch(set_time(id,string));\r\n}\r\n/* //비동기 액션생성 함수 */\r\n\r\n\r\nconst initalState = [];\r\n\r\nexport default function message(state= initalState,action){\r\n    switch(action.type){\r\n        case UPDATE : \r\n            return state.concat(action.msgs);\r\n        case CHANGE_MSG : \r\n            return state.map( \r\n                msgs =>\r\n                ( \r\n                    msgs.id === action.msgs.id) \r\n                    ? {\r\n                        ...msgs,\r\n                        target:action.msgs.target,\r\n                        text:action.msgs.text,\r\n                        time:action.msgs.time,\r\n                    }\r\n                    : msgs\r\n                );\r\n        case SET_TIME : \r\n            return state.map(\r\n                msgs =>\r\n                    msgs.id === action.id ? {...msgs, time:action.time} :{...msgs, time:action.time}\r\n            );\r\n        default : \r\n            return state;\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {update_msg,change_msgAsync,loading,set_timeAsync} from \"../module/messages\";\r\nimport Main from \"../component/Main\";\r\n\r\nfunction MessageContainer(){\r\n\r\n    const msgList = useSelector(state => state.messages);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLoading = (id) => dispatch(loading(id));\r\n    const onUpdated = (id,text,target,time) => dispatch(update_msg(id,text,target,time)); \r\n    const onAddAsync =(id,text,target,time) => dispatch(change_msgAsync(id,text,target,time));\r\n    const onsetTimeAsync = (id) => dispatch(set_timeAsync(id));\r\n        \r\n    return <Main msgList={msgList} onUpdated={onUpdated} onLoading={onLoading} onsetTimeAsync={onsetTimeAsync} onAddAsync={onAddAsync}/>;\r\n}\r\n\r\nexport default MessageContainer;","import Main from \"./component/Main\";\nimport MessageContainer from \"./container/MessageContainer\";\nimport './scss/common.scss';\nimport './scss/reset.scss';\n\nfunction App() {\n  return (\n   <MessageContainer/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport messages from './messages';\r\n\r\nconst rootReducer = combineReducers({\r\n    messages\r\n\r\n})\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './module';\nimport logger from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\n\nconst store = createStore(rootReducer,applyMiddleware(ReduxThunk,logger));\nReactDOM.render(\n  <Provider store= {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n "],"sourceRoot":""}