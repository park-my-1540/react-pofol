{"version":3,"sources":["module/ui.js","lib/gsapFuncs.js","pages/DetailPage.js","module/messages.js","component/MsgComp.js","component/MsgSecComp.js","container/MessageContainer.js","component/CustomLink.js","component/ItemComp.js","component/PofolComp.js","component/PracComp.js","component/SlideComp.js","component/MainTypeComp.js","component/Header.js","component/Aside.js","component/AboutComp.js","component/MoMain.js","pages/Main.js","component/Transition.js","component/AnimatedCursor.js","container/MainContainer.js","App.js","reportWebVitals.js","module/index.js","index.js"],"names":["MAIN_IDX_UPDATE","POFOL_IDX_UPDATE","DEVICE_UPDATE","initialState","mainActIdx","pofolActIdx","device","mainUpdate","idx","type","transGsap","target","attr","val","dur","topTo","gsap","to","pause","play","clipGsap","tl","timeline","duration","allToClipGsap","stagger","slideGsap","transform","slideGsap2","_var","flag","fromTo","reverse","mainResTypoGsap","top","left","ease","rotation","DetailPage","project","cursorOuterRef","cursorInnerRef","params","useLocation","state","elementHover","useCallback","inner","outer","current","classList","add","elementLeave","remove","useEffect","document","querySelectorAll","forEach","link","addEventListener","querySelector","className","style","backgroundImage","process","image","onScroll","_text","_text_span","winH","window","innerHeight","posFromTop","getBoundingClientRect","offsetHeight","alwaysShowTracks","plugins","overscroll","effect","maxHeight","href","hashtag","map","hs","date","title","desc","dangerouslySetInnerHTML","__html","sub_desc","url","alt","src","class","UPDATE","CHANGE_MSG","change_msgAsync","id","text","time","dispatch","setTimeout","msgs","change_msg","initalState","Main","msgState","msg","React","memo","MsgSecComp","msgList","onLoading","onAddAsync","onUpdated","chatStart","useState","inputs","setInputs","nextId","useRef","fakeChat","rand_1_fatChat","Math","floor","random","length","currentTime","objDiv","getElementById","scrollTop","scrollHeight","Date","useMemo","today","hours","getHours","slice","minutes","getMinutes","sendMsg","MsgComp","placeholder","value","onChange","e","onKeyDown","keyCode","onClick","MessageContainer","useSelector","messages","useDispatch","update_msg","loading","CustomLink","children","pofolIdx","toString","substr","navigate","useNavigate","linkClicked","preventDefault","parseInt","ItemComp","pofoldata","cont","hoverTarget","hoverFunc","_this","button","evt","_target","closest","span","getElementsByClassName","parentOffset","relX","pageX","relY","pageY","pofol","members","participation","split","i","key","PofolComp","data","slidesPerView","spaceBetween","mousewheel","speed","pagination","renderProgressbar","progressbarFillClass","onSlideChangeTransitionStart","swiper","swiper_type01","active_slide","pc","mo","etc","previousIndex","activeIndex","next_slide","next_title","next_pc","next_mo","prev_slide","prev_title","prev_pc","prev_mo","SwiperCore","use","Mousewheel","Pagination","Navigation","PracComp","actIdx","ui","onChanged","initialSlide","el","clickable","renderBullet","index","onSlideChangeTransitionEnd","SlideComp","practice","MainTypeComp","deviceChk","changeMainSlideFunc","typoEventListner","removeAttribute","hoverGsap","currentTarget","typograpy","removeEventListener","Header","actSec","sub_tit","tit","setTit","Aside","header_tit","h1tit","setH1Tit","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AboutComp","wid","setWid","hei","setHei","resize","innerWidth","ceil","offsetWidth","aboutBox","h3","desc2","reverseAllToClipGsap","TagCanvas","Start","outlineColour","depth","maxSpeed","textFont","textColour","weightMode","weight","weightGradient","display","xmlnsXlink","attributeName","begin","from","repeatCount","dy","textLength","xlinkHref","fontSize","Momain","openChat","circles","motagWrap","modalBox","typoBox","chat_btn","contains","setActIdx","swiperRef","list","disable","menu","circle","point","init","activeIndx","aside","msgBox","tagWrap","chatBtn","_activeIdx","isPc_isMain","bottom","ToPcMain","enable","isPc_isSub","ToPcSub","isMo_isMain","isMo_isSub","setPositionFunc","CircleComp","direction","navigation","nextEl","prevEl","onSlideChange","ref","Transition","location","currentKey","pathname","TransitionGroup","component","CSSTransition","timeout","enter","exit","classNames","appear","path","element","AnimatedCursor","onMouseMove","previousTime","requestRef","x","y","coords","setCoords","endX","endY","clientX","clientY","undefined","animateOuterCursor","timestamp","requestAnimationFrame","MainContainer","onUpdateDevice","deviceFlag","winWid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","concat","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.d5bd0adf.chunk.js","sourcesContent":["/*\r\n    ui \r\n    MAIN_IDX_UPDATE : 현재 활성화된 메인 스와이퍼 인덱스\r\n    POFOL_IDX_UPDATE : 현재 활성화된 practice 스와이퍼 인덱스 - 페이지 이동 후 복귀했을때 활성화 된 인덱스로 돌아가기 위해\r\n    DEVICE_UPDATE : 현재 윈도우 사이즈 768 기준 mo/pc 상태\r\n*/\r\n\r\nconst MAIN_IDX_UPDATE= 'ui/mainupdate';\r\nconst POFOL_IDX_UPDATE= 'ui/pofolupdate';\r\nconst DEVICE_UPDATE= 'ui/deviceupdate';\r\n\r\nconst initialState = {\r\n    mainActIdx : 0,\r\n    pofolActIdx : 0,\r\n    device:'',\r\n}\r\nexport const mainUpdate = (idx) => ({type:MAIN_IDX_UPDATE,idx})\r\nexport const pofolUpdate = (idx) => ({type:POFOL_IDX_UPDATE,idx})\r\nexport const deviceUpdate = (deviceFlag) => ({type:DEVICE_UPDATE,deviceFlag})\r\n\r\nexport default function ui(state=initialState,action){\r\n    switch(action.type){\r\n        case MAIN_IDX_UPDATE : {\r\n            return {\r\n                ...state,\r\n                mainActIdx : action.idx\r\n            }\r\n        }\r\n        case POFOL_IDX_UPDATE : {\r\n            return {\r\n                ...state,\r\n                pofolActIdx : action.idx\r\n            }\r\n        }\r\n        case DEVICE_UPDATE : {\r\n            return {\r\n                ...state,\r\n                device : action.deviceFlag\r\n            }\r\n        }\r\n        default : return state;\r\n    }\r\n}","import {gsap} from 'gsap'\r\n\r\n//transGsap : 받아온 attr 속성을 0로\r\nexport function transGsap(target,attr,val,dur=2){\r\n    let topTo = gsap.to(target, {\r\n        [attr]:val,\r\n        duration: dur, \r\n        ease: \"easeing\"\r\n     });\r\n     topTo.pause();\r\n     topTo.play();\r\n}\r\n\r\n// hoverGsap : target hover시 \r\nexport function hoverGsap(target){\r\n    let tl = gsap.timeline();\r\n    tl.to(target, 0.5, \r\n        {\r\n           '-webkit-animation' :'text-shadow 0.5s ease',\r\n           'animation' :'text-shadow 0.5s ease'\r\n        }\r\n    );\r\n    tl.play();\r\n}\r\n\r\n// typoGsap  \r\nexport function typoGsap(target){\r\n    let tl = gsap.timeline();\r\n    tl.to(target, {left: '0%',bottom:'0',transform: 'translate(-20%,20%) scale(0.4,0.3)', duration: 2,ease:'elastic.out(1,1.3)'});\r\n    tl.pause();\r\n    tl.play();\r\n}\r\n\r\n// typoGsap-reverse  \r\nexport function reverseTypoGsap(target){\r\n    let tl = gsap.timeline();\r\n    tl.to(target, {left: '5%',bottom:'100px',transform: 'translate(0,0) scale(1)', duration: 2,ease:'elastic.out(1,1.3)'});\r\n    tl.pause();\r\n    tl.play();\r\n}\r\n\r\nexport function clipGsap(target){\r\n    let tl = gsap.timeline();\r\n    tl.to(target, {'-webkit-clip-path': 'inset(100% 0 0 0)', duration: 0.5});\r\n    tl.to(target, {'clip-path': 'inset(100% 0 0 0)', duration: 0.5});\r\n    tl.to(target, {'-webkit-clip-path': 'inset(0% 0 0 0)', duration: 0.5});\r\n    tl.to(target, {'clip-path': 'inset(0% 0 0 0)', duration: 0.5});\r\n    tl.pause();\r\n    tl.play();\r\n}\r\nexport function allToClipGsap(target,dur=0.2){\r\n    var tl = gsap.timeline();\r\n    tl.to(target, 1, \r\n        {\r\n            '-webkit-clip-path': 'inset(0% 0% 0% 0%)',\r\n            'clip-path': 'inset(0% 0% 0% 0%)',\r\n            stagger:(dur + 0.2),\r\n            duration:dur \r\n        }\r\n    );\r\n    tl.play(); \r\n}\r\nexport function reverseAllToClipGsap(target){\r\n        \r\n    var tl = gsap.timeline();\r\n    tl.to(target, 1, \r\n        {\r\n            '-webkit-clip-path': 'inset(0 100% 0 0)',\r\n            'clip-path': 'inset(0 100% 0 0)',\r\n            stagger:0.5\r\n            ,duration:0.2\r\n        }\r\n    );\r\n    tl.play(); \r\n}\r\n\r\nexport function mainTypoGsap(target){\r\n    var tl = gsap.timeline();\r\n    tl.to(target, 1, \r\n        {\r\n           '-webkit-animation' :'text-shadow 1s ease',\r\n           'animation' :'text-shadow 1s ease',\r\n            stagger:0.1\r\n        }\r\n    );\r\n}\r\n\r\n/* 프로젝트 스와이퍼 효과 */\r\nexport function slideGsap(target){\r\n    var tl = gsap.timeline();\r\n    tl.to(target, 1, \r\n        {\r\n            transform :'translateX(0)',\r\n            stagger:0.2\r\n            ,duration:0.2\r\n        }\r\n    );\r\n    tl.play();\r\n}\r\n/* practice 스와이퍼 효과 */\r\nexport function slideGsap2(target,_var,flag=true){\r\n    var tl = gsap.timeline();\r\n    tl.fromTo(target, 1, \r\n        {\r\n            transform :'translateX(0px)',\r\n            stagger:0.2\r\n            ,duration:0.2\r\n        },\r\n        {\r\n            transform : `translateX(${_var}px)`,\r\n            stagger:0.2\r\n            ,duration:0.2\r\n        }\r\n    );\r\n    if(flag){\r\n        tl.play();\r\n    }else{\r\n        tl.reverse(1);\r\n    }\r\n}\r\nexport function mainResTypoGsap(target,flag=true){\r\n    var tl = gsap.timeline();\r\n    tl.fromTo(target, 1, \r\n        {\r\n            top:'0',\r\n            left : '5%',\r\n            ease:'elastic.out(1,1.3)',\r\n            transform:'none',\r\n        }  , {\r\n            top:'70%',\r\n            left: '5%',\r\n            rotation: 360,\r\n            transform:'none',\r\n            ease:'elastic.out(1,1.3)',\r\n        }\r\n    );\r\n    if(flag){\r\n        tl.play();\r\n    }else{\r\n        tl.reverse(1);\r\n    }\r\n}\r\n\r\nexport function ToPcSub(target,flag=true){\r\n    var tl = gsap.timeline();\r\n    tl.to(target, 1, \r\n        {\r\n            top :'auto', //pc\r\n            left: '5%',\r\n            transform : 'translate(-20vh,20vh) scale(0.4,0.3)',\r\n            ease:'elastic.out(1,1.3)',\r\n        }\r\n    );\r\n    tl.pause();\r\n    tl.play();\r\n}\r\nexport function ToPcMain(target,flag=true){\r\n    var tl = gsap.timeline();\r\n    tl.to(target, 1, \r\n        {\r\n            bottom: '35vh', \r\n            transform : 'translate(0,0) scale(1,1)',\r\n            ease:'elastic.out(1,1.3)',\r\n        }\r\n    );\r\n    tl.pause();\r\n    tl.play();\r\n}\r\n","import React ,{useEffect,useCallback} from \"react\";\r\nimport {useLocation,Link } from \"react-router-dom\";\r\nimport '../scss/import.scss'\r\nimport '../scss/detail.scss'\r\nimport { Scrollbar } from \"smooth-scrollbar-react\";\r\nimport { allToClipGsap } from \"../lib/gsapFuncs\";\r\n/**\r\n * DetailPage\r\n * practice 디테일 페이지\r\n */\r\nfunction DetailPage({cursorOuterRef,cursorInnerRef}){\r\n    let params = useLocation ();\r\n    let project;\r\n    if(params.state != null){\r\n        project = params.state; \r\n    }\r\n    /*\r\n    elementHover : innerRef에 넣을 클래스 inner , outerRef에 넣을 클래스 outer 를 받아서 hover 시 add\r\n    elementLeave : innerRef에 넣을 클래스 inner , outerRef에 넣을 클래스 outer 를 받아서 leave 시 remove\r\n  */\r\n    const elementHover =useCallback((inner,outer=inner) => {\r\n        cursorOuterRef.current.classList.add(inner);\r\n        cursorInnerRef.current.classList.add(outer);\r\n    },[]);\r\n    const elementLeave =useCallback((inner,outer=inner) => {\r\n        cursorOuterRef.current.classList.remove(inner);\r\n        cursorInnerRef.current.classList.remove(outer);\r\n    },[]);\r\n\r\n\r\n    useEffect(() => {\r\n        /**\r\n         * 메인 배너 ,\r\n         * 메인 배너 프로젝트명.\r\n         * 스크롤 텍스트 애니메이션 효과\r\n         */\r\n        document.querySelectorAll('.prj-link').forEach((link)=>{\r\n            link.addEventListener(\"mouseover\",function(){elementHover('cursor-hide','cursor-link')});\r\n            link.addEventListener(\"mouseleave\",function(){elementLeave('cursor-hide','cursor-link')});\r\n        })\r\n\r\n        const   _target = document.querySelector('.sub-tit'),\r\n                _target02 = document.querySelector('.tit-scroll-wrap');\r\n                allToClipGsap([_target,_target02],0.7)  ;\r\n    }, [])\r\n\r\n    /**\r\n     * scrollFunc : 스크롤 한만큼 text-wrap 이동\r\n     */\r\n    function scrollFunc(){\r\n        const   _text = document.querySelector('.text-wrap'),\r\n                _text_span = document.querySelector('.text-wrap').querySelector('span'),\r\n                winH = window.innerHeight, /* 윈도우의 높이 */\r\n                posFromTop = _text.getBoundingClientRect().top; /* _text top 값 */\r\n\r\n        0 > posFromTop-winH &&  posFromTop-winH > -_text.offsetHeight ?   //텍스트영역에서 스크롤 할 경우\r\n            _text_span.style.top=posFromTop + \"px\" : \r\n                _text_span.style.top=-posFromTop + \"px\";\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n            project && (\r\n                <div className=\"sub-wrap\">\r\n                <div className=\"fixed-wrap\">\r\n                    <div className=\"fixed-bg\" style={{backgroundImage : `url(${process.env.PUBLIC_URL}${project.image[1]})`}}></div>\r\n                </div>\r\n                <Scrollbar \r\n                    className=\"sub-container\"\r\n                    onScroll={scrollFunc}\r\n                    alwaysShowTracks\r\n                    plugins={{\r\n                        overscroll: {\r\n                            effect: \"glow\"\r\n                        } \r\n                    }}\r\n                    >\r\n                    <div className=\"sub-container\" style={{ maxHeight: '100vh' }}>\r\n                        <div className=\"sub-main\">\r\n                            <div className=\"sub-header\">\r\n                                <Link to=\"/\">HOME</Link>\r\n                                <a href=\"https://github.com/park-my-1540\" className=\"link-git\" target=\"_blank\">PORTFOLO</a>\r\n                            </div>\r\n                            <h1 className=\"sub-tit\">{project.project}</h1>\r\n                            <div className=\"tit-scroll-wrap\">\r\n                                <p className=\"tit-scroll\">SCROLL</p>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                        <div className=\"sub-content\">\r\n                            <div className=\"inner\">\r\n                                <div className=\"sub-top\">\r\n                                    <div className=\"sub-title-wrap\">\r\n                                        <div className=\"tag-wrap\">\r\n                                            {project.hashtag.map((hs)=><span>{hs}</span>)}\r\n                                        </div>\r\n                                        <p className=\"date\">{project.date}</p>\r\n                                        <h2 className=\"project\">{project.project}</h2>\r\n                                        <h3>{project.title}</h3>\r\n                                    </div>\r\n                                    <div className=\"sub-desc-wrap\">\r\n                                        <p className=\"desc-tit\">{project.desc}</p>\r\n                                        <div className=\"sub-desc\" dangerouslySetInnerHTML={ {__html: project.sub_desc}}></div>\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                                <div className=\"sub-cont\">\r\n                                    <div className=\"main-box\">\r\n                                        <div className=\"pc-box\">\r\n                                            <a href={project.url[0]} alt={`${project.title} img`} className=\"prj-link\" target=\"_blank\">\r\n                                                <img src={`${process.env.PUBLIC_URL}${project.image[0]}`} />    \r\n                                            </a>\r\n                                        </div>\r\n                                        <a href={project.url[0]} alt={`${project.title} img`} className=\"btn-site\" target=\"_blank\"><span class=\"txt\">View Site</span></a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-wrap\">\r\n                                <span>Always enjoy the work</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sub-footer\">\r\n                            <span>PROJECTS</span>\r\n                        </div>\r\n                    </div>\r\n                </Scrollbar>\r\n            </div>\r\n            )\r\n        }\r\n           \r\n        </>\r\n    )\r\n}    \r\nexport default DetailPage;","const UPDATE = 'message/update'; //현재 상태 변경  -> \r\nconst CHANGE_MSG = 'message/change_msg'; // loading 중인 상태를 변경하고 text 받아서 노출시킴\r\n\r\nexport const loading = (id) => ({ //로딩중\r\n    type:UPDATE,\r\n    msgs:{\r\n        id ,\r\n        target:\"msgLoading\",\r\n        text:'',\r\n    }\r\n})\r\nexport const update_msg = (id,target,text,time) => ({ // 새로운 메시지 노출 시킴\r\n    type:UPDATE,\r\n    msgs:{\r\n        id , \r\n        target,\r\n        text,\r\n        time\r\n    }\r\n})\r\nexport const change_msg = (id,target,text,time) => ({ // loading 중인 상태를 변경하고 text 받아서 노출시킴\r\n    type: CHANGE_MSG,\r\n    msgs: {\r\n      id ,\r\n      target,\r\n      text,\r\n      time \r\n    }\r\n  });\r\n\r\n\r\n/* 비동기 액션생성 함수 */\r\nexport const change_msgAsync  = (id,target,text,time) => dispatch => {\r\n    setTimeout(() => dispatch(change_msg(id,target,text,time)), 2000);\r\n}\r\n/* //비동기 액션생성 함수 */\r\n\r\nconst initalState = [];\r\n\r\nexport default function message(state= initalState,action){\r\n    switch(action.type){\r\n        case UPDATE : \r\n            return state.concat(action.msgs);\r\n        case CHANGE_MSG : \r\n            return state.map( \r\n                msgs =>\r\n                ( \r\n                    msgs.id === action.msgs.id) \r\n                    ? {\r\n                        ...msgs,\r\n                        target:action.msgs.target,\r\n                        text:action.msgs.text,\r\n                        time:action.msgs.time,\r\n                    }\r\n                    : msgs\r\n                );\r\n        default : \r\n            return state;\r\n    }\r\n}","import React from \"react\";\r\nfunction Main({msgState,msg,time}){\r\n    const msgMe = (\r\n        <div className=\"msg-box\">\r\n            <p className=\"profile-img\"></p>\r\n            <div className=\"msg-txt me\">\r\n                <p className=\"txt\">\r\n                    {msg}\r\n                </p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    const msgYou = (\r\n        <div className=\"msg-box\">\r\n            <div className=\"msg-txt you\">\r\n                <p className=\"txt\">{msg}</p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    const msgLoading = (\r\n        <div className=\"msg-box loading\">\r\n            <p className=\"profile-img\"></p>\r\n            <div className=\"msg-txt\">\r\n                <div className=\"txt\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    if(msgState === \"msgMe\") return (msgMe);\r\n    else if(msgState === \"msgYou\") return msgYou ;\r\n    else if(msgState === \"msgLoading\") return msgLoading ;\r\n}\r\nexport default React.memo(Main);","import React,{useEffect,useState,useRef,useCallback,useMemo} from \"react\"\r\nimport MsgComp from \"./MsgComp\";\r\n\r\n/*\r\n    MsgSecComp \r\n        useEffect -> chatStart 호출\r\n */\r\nexport default function MsgSecComp({msgList,onLoading,onAddAsync,onUpdated}){\r\n    useEffect(()=>{\r\n        chatStart();\r\n    },[]);\r\n\r\n    const [inputs,setInputs] = useState();\r\n    const nextId = useRef(2);\r\n    const fakeChat = ['반갑습니다.','열심히 하겠습니다.','즐거운 하루 보내세요~~','잘 부탁드립니다 ^^','계속해서 성장하고 싶습니다!!!'];\r\n    const rand_1_fatChat = Math.floor(Math.random() * (fakeChat.length-1)) + 1\r\n\r\n    useEffect(()=>{\r\n        /**\r\n         * msgList 가 변경 되는 시점에 마지막 메시지가 입력 메시지면\r\n         * 답장 메시지 출력\r\n         * msg-box가 스크롤을 넘어가면 마지막 메시지에 보이게 스크롤 이동\r\n         */\r\n        if(msgList.length && msgList[msgList.length-1].target === \"msgYou\"){\r\n            setTimeout(()=>{\r\n                onLoading(nextId.current);\r\n                onAddAsync(nextId.current++,\"msgMe\", fakeChat[rand_1_fatChat],currentTime);\r\n            },2000)\r\n        }\r\n        const objDiv = document.getElementById(\"content\");\r\n        \r\n        if(msgList.length && objDiv.offsetHeight>400){ //스크롤 마지막 메시지로 이동\r\n            objDiv.scrollTop = objDiv.scrollHeight;\r\n        }\r\n    },[msgList])\r\n    \r\n     /**\r\n     * currentTime : 현재시간\r\n     */\r\n      let date = new Date(); \r\n      let currentTime = useMemo(() => {\r\n        let today = new Date(),\r\n        hours = ('0' + today.getHours()).slice(-2),\r\n        minutes = ('0' + today.getMinutes()).slice(-2),\r\n        string = `${hours}:${minutes}`;\r\n        return string;\r\n      }, [date.getMinutes()]) // 분이 바뀔때만 \r\n\r\n    /**\r\n     * chartStart : 초기 메시지 노출\r\n     * loading후 메시지 노출되게\r\n     */\r\n     const chatStart = useCallback(\r\n        () => {\r\n            onLoading(0);\r\n            onAddAsync(0,\"msgMe\", \"안녕하세요\",currentTime);\r\n            setTimeout(()=>{\r\n                onLoading(1);\r\n                onAddAsync(1,\"msgMe\", \"박미영입니다.\",currentTime);\r\n            },2000)\r\n        },\r\n    []\r\n    );\r\n    /**\r\n     * sendMsg : 입력 메시지 노출\r\n     */\r\n\r\n    const sendMsg = useCallback(\r\n        () => {\r\n            onUpdated(nextId.current++,\"msgYou\", inputs,currentTime);\r\n            setInputs('');\r\n        },\r\n    [inputs]\r\n    );\r\n    return (\r\n        <>\r\n         <section className=\"main\">\r\n            <div className=\"inner\">\r\n                <div className=\"chat-box\">\r\n                    <div className=\"chat-header\">\r\n                        <p className=\"profile-img\"></p>\r\n                        <div className=\"cont\">\r\n                            <p className=\"txt\">PARKMEEYOUNG</p>\r\n                            <p className=\"time\">KOREA</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\" id=\"content\">\r\n                        { msgList && msgList.map((msg)=><MsgComp msgState={msg.target} msg={msg.text} time={msg.time}/>)}\r\n                    </div>\r\n                    <div className=\"send-box\">\r\n                        <input type=\"text\" placeholder=\"Type message...\" value={inputs} className=\"txt-input\" onChange={useCallback((e)=>{setInputs(e.target.value)},[inputs])} onKeyDown={useCallback((e)=>{if(e.keyCode === 13){sendMsg()}},[inputs])}></input>\r\n                        <button type=\"button\" className=\"btn-send\" onClick={sendMsg}>SEND</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mouse-wrap\">\r\n                <div className=\"mouse\"><span></span></div>\r\n                <span className=\"txt\">scroll</span>\r\n            </div>        \r\n         </section>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {update_msg,change_msgAsync,loading,set_timeAsync} from \"../module/messages\";\r\nimport MsgSecComp from \"../component/MsgSecComp\";\r\nimport '../scss/chat.scss'\r\n/*\r\n    MessageContainer : module > message 의 컨테이너 컴포넌트\r\n*/\r\n\r\nfunction MessageContainer(){\r\n    /*\r\n        msgList : 현재 msg list\r\n     */\r\n    const msgList = useSelector(state => state.messages);\r\n    const dispatch = useDispatch();\r\n\r\n    /*\r\n        onLoading : 해당 msg 로딩 상태로 update\r\n        onUpdated : 상대방 입력한 msg  update\r\n        onAddAsync : msgList에 답장 msg 추가 \r\n    */\r\n    const onLoading = (id) => dispatch(loading(id));\r\n    const onUpdated = (id,text,target,time) => dispatch(update_msg(id,text,target,time)); \r\n    const onAddAsync =(id,text,target,time) => dispatch(change_msgAsync(id,text,target,time));\r\n        \r\n    return <MsgSecComp msgList={msgList} onUpdated={onUpdated} onLoading={onLoading} onAddAsync={onAddAsync}/>;\r\n}\r\n\r\nexport default MessageContainer;","import React, { useCallback } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {useDispatch} from 'react-redux';\r\nimport {mainUpdate,pofolUpdate} from \"../module/ui\";\r\n\r\nexport default function CustomLink({ to, state,children }) {\r\n  /**\r\n   * 현재 활성화된 practice 스와이퍼 인덱스로 디스패치 전달\r\n   */\r\n  const dispatch = useDispatch();\r\n  const pofolIdx = state.id.toString().substr(1,1);\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * linkClicked \r\n   *  현재 활성화된 메인 스와이퍼는 3,\r\n   *  현재 활성화된 pratice 스와이퍼 인덱스 디스패치\r\n   *  navigate에 state 전달\r\n   */\r\n  const linkClicked = useCallback((e)=>{\r\n    e.preventDefault();\r\n    dispatch(mainUpdate(3));\r\n    dispatch(pofolUpdate(parseInt(pofolIdx)-1));\r\n    navigate(to, {state})\r\n    \r\n  },[pofolIdx])\r\n\r\n  return (\r\n    <Link   to={to} \r\n            onClick={(e)=>linkClicked(e)}\r\n            >\r\n      {children}\r\n    </Link>\r\n  );\r\n}","import React,{ useEffect,useCallback } from \"react\";\r\nimport CustomLink from \"./CustomLink\";\r\n/*\r\n  SwiperItem 컴포넌트\r\n*/\r\nexport default function ItemComp({pofoldata,cont}) {\r\n    useEffect(() => {\r\n      const hoverTarget = document.querySelectorAll('[data-ui=\"hover\"]');\r\n      hoverFunc(hoverTarget);\r\n    }, []);\r\n\r\n  /*\r\n    hoverFunc : 참가인원, 참겨정도 circle hover 이벤트\r\n  */\r\n  const hoverFunc = useCallback(\r\n   (_this)=>\r\n      {\r\n        _this.forEach(button => {\r\n          [\"mouseenter\", \"mouseout\"].forEach(evt => {\r\n            button.addEventListener(evt, e => {\r\n              let _target = e.target.closest('[data-ui=\"hover\"]'),\r\n                  span = _target.getElementsByClassName(\"hover\");\r\n              let parentOffset = _target.getBoundingClientRect(),\r\n                  relX = e.pageX - parentOffset.left,\r\n                  relY = e.pageY - parentOffset.top;\r\n      \r\n              span[0].style.top = relY + \"px\";\r\n              span[0].style.left = relX + \"px\";\r\n            });\r\n          });\r\n        });\r\n      },\r\n    []);\r\n\r\n  const project= (\r\n      pofoldata.device.map(device=>{\r\n        if(pofoldata.image[device] === null){\r\n          return ;\r\n        }\r\n        return (\r\n          <a href={pofoldata.url[device]} alt={device} className=\"prj-link\" target=\"_blank\">\r\n            <img src={`${process.env.PUBLIC_URL}${pofoldata.image[device]}`} class={device} alt={pofoldata.title}/>    \r\n          </a>\r\n        )\r\n      })\r\n  )\r\n\r\n  const pofol = (\r\n      <img src={`${process.env.PUBLIC_URL}${pofoldata.image[0]}`} className=\"mo\" alt={pofoldata.title}/>\r\n  )\r\n\r\n  return (  \r\n      <>\r\n        <div className=\"inner\" id={pofoldata.id}>\r\n            <div className=\"prj-top\">\r\n              <div className=\"tag-wrap\">\r\n                {pofoldata.hashtag.map((hs)=><span>{hs}</span>)}\r\n              </div>\r\n              <h2 className=\"prj-title\">{pofoldata.project}</h2>\r\n              <p className=\"prj-name\">{pofoldata.title}</p>\r\n            </div>\r\n            <div className=\"etc-box\">\r\n                <div className=\"etc-item\" data-ui=\"hover\">\r\n                    <span className=\"txt\">참여인원</span><span className=\"txt off\">{pofoldata.members}</span><span className=\"hover\"></span>\r\n                </div>\r\n                <div className=\"etc-item\" data-ui=\"hover\">\r\n                <span className=\"txt\">참여정도</span><span className=\"txt off\">{pofoldata.participation}</span><span className=\"hover\"></span>\r\n                </div>\r\n            </div>\r\n            <div className=\"prj-img\">\r\n              { cont === \"prac\" ?  pofol :project}\r\n            </div>\r\n            <div className=\"desc-wrap\">\r\n                <p className=\"prj-date\">{pofoldata.date}</p>\r\n                <p className=\"prj-desc\">{pofoldata.desc}</p>\r\n                {\r\n                  cont !== \"prac\"&&\r\n                    (<div className=\"sub-desc-wrap\">\r\n                          <ul>\r\n                              {pofoldata.sub_desc.split(\"\\n\").map((i,key) =><li key={key}>{i}</li>)}\r\n                          </ul>\r\n                    </div>)\r\n                }\r\n            </div>\r\n            {/* \r\n              practice 컴포넌트 일경우 detaipPage로 페이지 이동 \r\n              to : 조회한 id\r\n              state : 조회한 pofol  데이터\r\n              CustomLink 컴포넌트에 to, state 전달\r\n            */}\r\n            {\r\n              cont && (\r\n                <CustomLink \r\n                      to={`/${pofoldata.id}`}\r\n                      state ={pofoldata}\r\n                  >view<br/>Detail\r\n                </CustomLink>\r\n              )\r\n            }\r\n        </div>\r\n        </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport 'swiper/swiper.scss';\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport SwiperItem from \"./ItemComp\";\r\nimport{slideGsap,slideGsap2} from \"../lib/gsapFuncs\";\r\nimport SwiperCore, { Mousewheel, Pagination, Navigation } from \"swiper\";\r\n\r\nSwiperCore.use([Mousewheel, Pagination, Navigation]);\r\n\r\nfunction PofolComp({data}) {\r\n  /*\r\n    onChanged : 스와이퍼 변경할때 마다 움직이는 효과 gsap 함수 호출\r\n  */\r\n  const onChanged = (swiper) =>{\r\n    const swiper_type01 = document.querySelector('.swiper-container.type01'), //기준 스와이퍼\r\n          active_slide = swiper_type01.querySelector('.swiper-slide.swiper-slide-active'), //현재 active 스와이퍼 이 영역은 공통\r\n          title = active_slide.querySelector('.prj-top'),\r\n          pc = active_slide.querySelector('.prj-img .pc'),\r\n          mo = active_slide.querySelector('.prj-img .mo'),\r\n          desc = active_slide.querySelector('.desc-wrap'),\r\n          etc = active_slide.querySelector('.etc-box');\r\n          \r\n    if(swiper.previousIndex < swiper.activeIndex){\r\n      slideGsap([title,etc,mo,pc,desc]); // 다음으로 갈때 제목-휴대폰이미지 - 설명 순\r\n    }else{\r\n      slideGsap([desc,mo,pc,etc,title]); // 전으로 갈때 설명-휴대폰이미지 - 제목 순\r\n    }\r\n\r\n    if(swiper.activeIndex !== 7){ //마지막만 아니면 next slide 이벤트 x\r\n      const next_slide = swiper_type01.querySelector('.swiper-slide.swiper-slide-next'), //next\r\n            next_title = next_slide.querySelector('.prj-top'),\r\n            next_pc = next_slide.querySelector('.prj-img .pc'),\r\n            next_mo = next_slide.querySelector('.prj-img .mo'),\r\n            next_desc = next_slide.querySelector('.desc-wrap'),\r\n            next_etc = next_slide.querySelector('.etc-box');\r\n      slideGsap2([next_desc,next_pc,next_mo,next_etc,next_title],200); //next\r\n    }\r\n    if(swiper.activeIndex !== 0){ //첫번째만 아니면 prev slide 이벤트 x\r\n      const prev_slide = swiper_type01.querySelector('.swiper-slide.swiper-slide-prev'), //prev\r\n            prev_title = prev_slide.querySelector('.prj-top'),\r\n            prev_pc = prev_slide.querySelector('.prj-img .pc'),\r\n            prev_mo = prev_slide.querySelector('.prj-img .mo'),\r\n            prev_desc = prev_slide.querySelector('.desc-wrap'),\r\n            prev_etc = prev_slide.querySelector('.etc-box');\r\n       slideGsap2([prev_desc,prev_pc,prev_mo,prev_etc,prev_title],-200);  //prev\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Swiper\r\n        slidesPerView={1}\r\n        spaceBetween={30}\r\n        mousewheel={true}\r\n        speed={1500}\r\n        pagination={{\r\n          type: \"progressbar\",\r\n          renderProgressbar : (progressbarFillClass)=>{\r\n              return `\r\n                <div class=\"pagination_custom\">\r\n                    <span class=\"start_idx\">1</span>\r\n                    <span class=\"${progressbarFillClass}\"></span>\r\n                    <span class=\"last_idx\">${document.querySelector('.type01').querySelectorAll('.swiper-slide').length}</span>\r\n                </div>\r\n              `;\r\n          }\r\n        }}\r\n        onSlideChangeTransitionStart = {onChanged}\r\n        className=\"type01\">\r\n      {\r\n        data.map((data)=>\r\n          <SwiperSlide>\r\n            <SwiperItem pofoldata = {data}/>\r\n          </SwiperSlide>\r\n      )}\r\n      </Swiper>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(PofolComp)","import React, { useEffect,useCallback } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport 'swiper/swiper.scss';\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport SwiperItem from \"./ItemComp\";\r\nimport{allToClipGsap} from \"../lib/gsapFuncs\";\r\nimport SwiperCore, { Mousewheel, Pagination, Navigation } from \"swiper\";\r\nimport {useSelector} from \"react-redux\";\r\nSwiperCore.use([Mousewheel, Pagination, Navigation]);\r\n/**\r\n * pracComp\r\n * 연습예제 스와이퍼\r\n */\r\nexport default function PracComp({data,cont}) {\r\n  const actIdx = useSelector(state=>state.ui.mainActIdx);\r\n  const pofolIdx = useSelector(state=>state.ui.pofolActIdx);\r\n  useEffect(()=>{\r\n    if(actIdx===3){ //연습예제 스와이퍼에 오면 gsap 호출\r\n      onChanged();\r\n    }\r\n  },[actIdx])\r\n  const onChanged = useCallback(\r\n    () =>{\r\n      const swiper_type02 = document.querySelector('.swiper-container.type2');\r\n      const active_slide = swiper_type02.querySelector('.swiper-slide.swiper-slide-active');\r\n      const tar01 = active_slide.querySelector('.prj-top');\r\n      const tar02 = active_slide.querySelector('.prj-img');\r\n      const tar03 = active_slide.querySelector('.desc-wrap');\r\n      const tar04 = active_slide.querySelector('.desc-wrap+a');\r\n      allToClipGsap([tar01,tar02,tar03,tar04]);\r\n    }\r\n  ,[]);\r\n  return (\r\n    <>\r\n      <Swiper\r\n        slidesPerView={1}\r\n        spaceBetween={30}\r\n        speed={1000}\r\n        initialSlide = {parseInt(pofolIdx)}\r\n        pagination={{\r\n          el: '.pofol-pagination',\r\n          clickable:true,\r\n          renderBullet:function(index,className){\r\n            const list = [\"First\",'Second','Third'];\r\n            return `<p class=\"${className}\"><span>${list[index]}</span></p>`\r\n          }\r\n      }} \r\n      onSlideChangeTransitionEnd = {onChanged}\r\n      className=\"type2\">\r\n      {\r\n        data.map((data)=>\r\n          <SwiperSlide>\r\n            <SwiperItem pofoldata = {data} cont={cont} />\r\n          </SwiperSlide>\r\n      )}\r\n      </Swiper>\r\n      <div className=\"pofol-pagi-wrap\"><div className=\"pofol-pagination\"></div></div>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport React from \"react\";\r\nimport PofolComp from './PofolComp';\r\nimport PracComp from './PracComp';\r\nimport data from '../data/datas.json';\r\nimport '../scss/portfolio.scss'\r\n/**\r\n * SlideComp \r\n * cont = project => pofol 컴포넌트 호출\r\n * cont != project => practice 컴포넌트 호출\r\n */\r\nexport default function SlideComp({cont}){\r\n    const project =  <PofolComp data={data.project}/>;\r\n    const practice =  <PracComp data={data.practice} cont={cont}/>;\r\n    return (\r\n        <>\r\n        <section className=\"portfolio\">\r\n            {cont === \"project\" ? project : practice}\r\n        </section>\r\n        </>\r\n    )\r\n}    ","import React,{useEffect,useCallback} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport '../scss/chat.scss'\r\nimport { hoverGsap,mainTypoGsap} from \"../lib/gsapFuncs\";\r\nexport default function MainTypeComp({deviceChk}){\r\n    /**\r\n     * 첫번째 인덱스면\r\n     * mouseenter hover 되고\r\n     * typograpy-wrap에 효과 빼야함\r\n     * \r\n     * 첫번째 인덱스가 아니게 되면\r\n     * mouseenter 없애고\r\n     * typograpy-wrap에 효과 넣어야함. \r\n     * event.stopImmediatePropagation()\r\n     */\r\n    const mainActIdx = useSelector(state=>state.ui.mainActIdx);\r\n\r\n    useEffect(()=>{\r\n        changeMainSlideFunc()\r\n        if(document.querySelectorAll('.typograpy-wrap').length > 0){  \r\n            setTimeout(()=>{\r\n            mainTypoGsap(document.querySelectorAll('.typograpy-wrap span'));\r\n        },1000);}\r\n        \r\n    },[mainActIdx])\r\n    \r\n    const typoEventListner = useCallback((e) => {  // state가 바뀔 때마다 close 함수가 재생성되어, 컴포넌트 업데이터 전과 동일하지 않은 함수로 인식되는 것 같다.\r\n        const typograpy=[...document.querySelectorAll('.typograpy-wrap span')];\r\n        typograpy.forEach((text)=>{\r\n           text.removeAttribute('style');\r\n       })\r\n        hoverGsap(e.currentTarget) \r\n    },[]);\r\n\r\n    const changeMainSlideFunc = useCallback(()=>{\r\n        const typograpy=[...document.querySelectorAll('.typograpy-wrap span')];\r\n        if(mainActIdx === 0){ //메인 화면이면\r\n            typograpy.forEach((text)=>{\r\n                text.addEventListener('mouseover',typoEventListner);\r\n            })\r\n        }else{ //메인 화면이면이 아니면\r\n            typograpy.forEach((text)=>{\r\n                text.removeEventListener('mouseover',typoEventListner);\r\n            })\r\n        }\r\n    },[mainActIdx])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-wrapper\">\r\n                <div className={`tag-wrap ${(deviceChk === 'pc' ? \"main-tag\" : \"momain-tag\")}`}>\r\n                    <p className=\"tag\"><span>퍼블리싱</span></p>\r\n                    <p className=\"tag\"><span>4년차</span></p>\r\n                    <p className=\"tag\"><span>신입</span></p>\r\n                    <p className=\"tag\"><span>프론트엔드</span></p>\r\n                </div>\r\n                <div className={`typograpy-wrap ${(deviceChk === 'pc' ? \"mainTypo\" : \"momainTypo\")}`}>\r\n                    <p>\r\n                        <span>J</span>\r\n                        <span>U</span>\r\n                        <span>N</span>\r\n                        <span>I</span>\r\n                        <span>O</span>\r\n                        <span>R</span>\r\n                    </p>\r\n                    <p>\r\n                        <span>F</span>\r\n                        <span>R</span>\r\n                        <span>O</span>\r\n                        <span>N</span>\r\n                        <span>T</span>\r\n                        <span>E</span>\r\n                        <span>N</span>\r\n                        <span>D</span>\r\n                    </p>\r\n                    <p>\r\n                        <span>D</span>\r\n                        <span>E</span>\r\n                        <span>V</span>\r\n                        <span>L</span>\r\n                        <span>O</span>\r\n                        <span>P</span>\r\n                        <span>E</span>\r\n                        <span>R</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","\r\nimport React,{useEffect,useState} from \"react\";\r\nimport {clipGsap} from '../lib/gsapFuncs';\r\n\r\nexport default function Header({actSec,deviceChk}){\r\n    const sub_tit = document.querySelector('.inner span');\r\n    const [tit,setTit] = useState('');\r\n    useEffect(() => {\r\n        clipGsap(sub_tit);\r\n        setTimeout(()=>{\r\n            setTit(actSec);\r\n        },1000);\r\n    }, [actSec])\r\n    return(\r\n        <div className={(actSec === \"Home\" ? \"header isMain\" : \"header\")}>\r\n            <div className=\"inner\">\r\n                {\r\n                    deviceChk === 'mo'   ? actSec === 'Home'? <span>PARK MY's Portfolio</span> : <span></span> : <span>{tit}</span>\r\n                }\r\n                </div>\r\n            <a href=\"https://github.com/park-my-1540\" target=\"_blank\" className=\"link_git\"><span className=\"blind\">깃으로 이동</span></a>\r\n        </div>\r\n    );\r\n}","import React,{useEffect,useState} from \"react\";\r\nimport {clipGsap} from '../lib/gsapFuncs';\r\nexport default function Aside({actSec,deviceChk}){\r\n  const header_tit = document.querySelector('.aside-top h1');\r\n  const [h1tit,setH1Tit] = useState('Home');\r\n \r\n  useEffect(() => {\r\n    if(deviceChk === 'mo'){\r\n      clipGsap(header_tit);\r\n      setTimeout(()=>{\r\n        setH1Tit(actSec);\r\n      },1000);\r\n    }\r\n}, [actSec])\r\n    return(\r\n        <div className=\"aside\">\r\n            <div className=\"aside-top\">\r\n              {\r\n                deviceChk === 'mo' ? <h1>{h1tit}</h1> :  <h1>PARK MY's Portfolio</h1>\r\n              }\r\n            </div>\r\n            <div className=\"main-ctrl\">\r\n              <button className=\"main-prev\"><span className=\"blind\">이전으로</span><svg width={deviceChk==='pc'? 15 :12} height=\"12\" viewBox=\"0 0 19 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 1L9.21373 11L18 1\" stroke=\"#1A1B1C\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path></svg></button>\r\n              <div className=\"main-pagination\"></div>\r\n              <button className=\"main-next\"><span className=\"blind\">다음으로</span><svg width={deviceChk==='pc'? 15 :12} height=\"12\" viewBox=\"0 0 19 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 1L9.21373 11L18 1\" stroke=\"#1A1B1C\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path></svg></button>\r\n            </div>\r\n          </div>\r\n    );\r\n}","import React,{useEffect,useState,useCallback} from \"react\";\r\nimport {allToClipGsap,reverseAllToClipGsap} from '../lib/gsapFuncs';\r\nimport TagCanvas from \"tag-canvas\";\r\nimport '../scss/about.scss';\r\n/**\r\n * AboutComp : 두번째 슬라이드 자기소개 컴포넌트\r\n */\r\nexport default function AboutComp({mainActIdx}){\r\n    const [wid,setWid] = useState();\r\n    const [hei,setHei] = useState();\r\n    /**\r\n     * resize 될때마다 tagCanvas의 wid,height 조정\r\n     */\r\n    const resize = useCallback( () =>{\r\n\r\n        let winWid = window.innerWidth;\r\n        if(winWid > 768){ \r\n             setWid(Math.ceil(document.querySelectorAll('.about')[0].offsetWidth/2));\r\n             setHei(Math.ceil(document.querySelectorAll('.about')[0].offsetHeight/1.5));\r\n        }\r\n        else{\r\n            setWid(Math.ceil(document.querySelectorAll('.about')[0].offsetWidth/1.5));\r\n            setHei(Math.ceil(document.querySelectorAll('.about')[0].offsetHeight/2));\r\n        }  \r\n      },[]);\r\n\r\n      window.addEventListener('resize',function(){\r\n           if(document.querySelectorAll('.about').length > 0){resize();}\r\n      });\r\n\r\n    /*\r\n      활성화된 메인 인덱스 변경 될때마다 gsaop 호출\r\n    */\r\n    useEffect(()=>{\r\n        const aboutBox = document.querySelector('.about-wrap');\r\n        const h3 = aboutBox.querySelector('.about-wrap h3');\r\n        const desc = aboutBox.querySelector('.pharse');\r\n        const desc2 = aboutBox.querySelector('.pharse2');\r\n        if(mainActIdx===1){\r\n            allToClipGsap([h3,desc,desc2]);\r\n        }\r\n        else{\r\n            reverseAllToClipGsap([h3,desc,desc2]);\r\n        }\r\n        resize();\r\n    },[mainActIdx]);\r\n\r\n    useEffect(()=>{\r\n        try {\r\n            TagCanvas.Start('myCanvas','tags',{\r\n                outlineColour: '#ffffff80',\r\n                reverse: true,\r\n                depth: 0.8,\r\n                maxSpeed: 0.05,\r\n                textFont: null,\r\n                textColour: null,\r\n                weightMode:'both',\r\n                weight: true,\r\n                weightGradient: {\r\n                    0: '#eb808e', \r\n                    0.66: '#6ab6df', \r\n                    1:    '#3a5dae',\r\n                }\r\n            }\r\n        );\r\n        } catch(e) {\r\n            document.getElementById('myCanvasContainer').style.display = 'none';\r\n        }\r\n    },[]);\r\n    return(\r\n        <>\r\n        <div className=\"about\">\r\n            <div className=\"inner\">\r\n                <div className=\"svg-box\">\r\n                    <div class=\"img_rotate\"></div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 400 400\">\r\n                        <defs>\r\n                            <path d=\"M50,250c0-110.5,89.5-200,200-200s200,89.5,200,200s-89.5,200-200,200S50,360.5,50,250\" id=\"textcircle_bottom\">\r\n                                <animateTransform attributeName=\"transform\" begin=\"0s\" dur=\"20s\" type=\"rotate\" from=\"195 250 250\" to=\"555 250 250\" repeatCount=\"indefinite\" />\r\n                            </path>\r\n                        </defs>\r\n                        <text dy={70} textLength={1220}>\r\n                            <textPath xlinkHref=\"#textcircle_bottom\">&nbsp;&nbsp;Do my best &nbsp;Since ~ 2017 </textPath>\r\n                        </text>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"about-wrap\">\r\n                    <h3>Me,My self and I</h3>\r\n                    <div className=\"about-desc\">\r\n                        <div className=\"pharse\">\r\n                            저는 4년차 웹 퍼블리셔 박미영입니다.<br/><br/>\r\n\r\n                            깔끔하고 동적인 UI를 좋아하고,<br/>\r\n                            <span className=\"point\">유지보수에 최적화된 스크립트 작성과 마크업에</span> 관심이 많습니다.<br/><br/>\r\n                        </div>\r\n                        <div className=\"pharse2\">\r\n                            프론트엔드 개발자가 되기 위해<br/>\r\n                            리액트에 많은 시간을 투자하고 있습니다.<br/>\r\n                            <span className=\"point\">리액트 최적화 방법</span>에 대해 관심이 많습니다.<br/><br/>\r\n\r\n                            정체되지 않고 계속해서 발전하는 사람이 되고싶습니다. \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"myCanvasContainer\">\r\n                    <canvas width={wid} height={hei} id=\"myCanvas\">\r\n                        <p>Anything in here will be replaced on browsers that support the canvas element</p>\r\n                    </canvas>\r\n                </div>\r\n                <div id=\"tags\">\r\n                    <ul>\r\n                        <li><a style={{fontSize:'1.5em'}} href=\"https://en.wikipedia.org/wiki/HTML\" target=\"_blank\">HTML5</a></li>\r\n                        <li><a style={{fontSize:'1.5em'}} href=\"https://en.wikipedia.org/wiki/Cascading_Style_Sheets\" target=\"_blank\">CSS3</a></li>\r\n                        <li><a style={{fontSize:'1.2em'}} href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\">ES6</a></li>\r\n                        <li><a style={{fontSize:'1.2em'}} href=\"https://en.wikipedia.org/wiki/XML\" target=\"_blank\">GSAP</a></li>\r\n                        <li><a style={{fontSize:'1.2em'}} href=\"https://en.wikipedia.org/wiki/Git\" target=\"_blank\">Git</a></li>\r\n                        <li><a style={{fontSize:'1.2em'}} href=\"https://en.wikipedia.org/wiki/Sass_(stylesheet_language)\" target=\"_blank\">SASS</a></li>\r\n                        <li><a style={{fontSize:'1.2em'}} href=\"https://reactjs.org/\" target=\"_blank\">React</a></li>\r\n                        <li><a style={{fontSize:'0.7em'}} href=\"https://reactjs.org/\" target=\"_blank\">Redux</a></li>\r\n                        <li><a style={{fontSize:'1.5em'}} href=\"https://en.wikipedia.org/wiki/JQuery\" target=\"_blank\">jQuery</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}","import React,{useCallback} from \"react\";\r\nimport MessageContainer from \"../container/MessageContainer\";\r\nimport '../scss/chat.scss';\r\nimport {transGsap,slideGsap2} from '../lib/gsapFuncs'\r\nexport default function Momain(){\r\n    \r\n    const openChat = useCallback((e)=> {\r\n\r\n        const   circles = document.querySelectorAll('.circle-box'),\r\n                motagWrap = document.querySelector('.tag-wrap.momain-tag'),\r\n                modalBox = document.querySelectorAll('.modal-box'),\r\n                typoBox = document.querySelector('.typograpy-wrap'),\r\n                chat_btn = e.currentTarget;\r\n\r\n                if(chat_btn.classList.contains('active')){\r\n                    chat_btn.classList.remove('active');\r\n                    modalBox[0].classList.remove('on');\r\n                    transGsap(modalBox,'left','999px',1);\r\n                    slideGsap2([circles,motagWrap,typoBox],-999,false);\r\n                }else{\r\n                    chat_btn.classList.add('active');\r\n                    slideGsap2([circles,motagWrap,typoBox],-999);\r\n                    transGsap(modalBox,'left','0',1);\r\n                    setTimeout(()=>{\r\n                        modalBox[0].classList.add('on');\r\n                    },1500);\r\n                }\r\n      },[]);\r\n    return(\r\n        <>\r\n            <a href=\"#none\" className=\"btn-chat\" onClick={openChat}></a>\r\n            <div className=\"modal-box\">\r\n                <MessageContainer/>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {useState ,useRef, useEffect,useCallback} from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport 'swiper/swiper.scss';\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport SwiperCore, { Mousewheel, Pagination, Navigation } from \"swiper\";\r\nimport MessageContainer from \"../container/MessageContainer\";\r\nimport SlideComp from \"../component/SlideComp\";\r\nimport MainTypeComp from \"../component/MainTypeComp\";\r\nimport Header from '../component/Header';\r\nimport Aside from '../component/Aside';\r\nimport About from '../component/AboutComp';\r\nimport MoMain from '../component/MoMain';\r\nimport '../scss/main.scss';\r\nimport {transGsap ,mainResTypoGsap,ToPcSub,ToPcMain} from '../lib/gsapFuncs';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {mainUpdate} from \"../module/ui\";\r\n\r\nSwiperCore.use([ Pagination,Navigation,Mousewheel]);\r\n\r\n/**\r\n * Main : \r\n * 1. useEffect => 마우스 포인터 클래스 변경되는 이벤트 연결\r\n * 2. 스와이퍼 변경 될때 onChanged 호출\r\n * 3. 윈도우 사이즈(deviceChk)와 활성화된 메인스와이퍼 인덱스(mainActIdx)에 따라 \r\n * \r\n *    pc면서 메인이면 isPc_icMain  함수 호출\r\n *    pc면서 서브면 isPc_isSub 함수 호출\r\n *    mo면서 메인이면 isMo_isMain 함수 호출\r\n *    mo면서 서브면 isMo_isSub 함수 호출\r\n */\r\n\r\nexport default function Main({deviceChk,cursorOuterRef,cursorInnerRef}) {\r\n  const dispatch = useDispatch();\r\n  const mainActIdx = useSelector(state=>state.ui.mainActIdx);\r\n  const [actIdx,setActIdx] = useState();\r\n  const swiperRef=useRef();\r\n  const list = [\"Home\",'About','Project','Practice']; //메뉴\r\n\r\n  useEffect(()=>{\r\n      mainActIdx !== 0 && swiperRef.current.swiper.mousewheel.disable();\r\n      \r\n      document.querySelectorAll('.main-pagination span').forEach((menu)=>{\r\n        menu.addEventListener(\"mouseover\",function(){elementHover('cursor-grow')});\r\n        menu.addEventListener(\"mouseleave\",function(){elementLeave('cursor-grow')});\r\n      });\r\n        document.querySelectorAll('.prj-link').forEach((link)=>{\r\n        link.addEventListener(\"mouseover\",function(){elementHover('cursor-hide','cursor-link')});\r\n        link.addEventListener(\"mouseleave\",function(){elementLeave('cursor-hide','cursor-link')});\r\n      })\r\n       document.querySelectorAll('.circle').forEach((circle)=>{\r\n        circle.addEventListener(\"mouseover\",function(){elementHover('cursor-hide')});\r\n        circle.addEventListener(\"mouseleave\",function(){elementLeave('cursor-hide')});\r\n      })\r\n       document.querySelectorAll('.point').forEach((point)=>{\r\n        point.addEventListener(\"mouseover\",function(){elementHover('cursor-grow3','cursor-grow2')});\r\n        point.addEventListener(\"mouseleave\",function(){elementLeave('cursor-grow3','cursor-grow2')});\r\n      })\r\n  },[]);\r\n\r\n  /*\r\n    elementHover : innerRef에 넣을 클래스 inner , outerRef에 넣을 클래스 outer 를 받아서 hover 시 add\r\n    elementLeave : innerRef에 넣을 클래스 inner , outerRef에 넣을 클래스 outer 를 받아서 leave 시 remove\r\n  */\r\n  const elementHover =useCallback((inner,outer=inner) => {\r\n    cursorOuterRef.current.classList.add(inner);\r\n    cursorInnerRef.current.classList.add(outer);\r\n  },[]);\r\n  const elementLeave =useCallback((inner,outer=inner) => {\r\n    cursorOuterRef.current.classList.remove(inner);\r\n    cursorInnerRef.current.classList.remove(outer);\r\n  },[]);\r\n\r\n  /**\r\n   * init \r\n   * @param {*} swiper \r\n   * @param {*} activeIndx : 현재 활성화된 인덱스 인수\r\n   * \r\n   * isPc_icMain : gsap 커스텀함수 호출, 휠 활성화, aside 메뉴 왼쪽으로 사라지게 함\r\n   * isPc_isSub  : gsap 커스텀함수 호출, 휠비활성화, aside 메뉴 왼쪽에서 화면에 노출\r\n   * isMo_isMain : gsap 커스텀함수 호출, 휠비활성화, 로고텍스트 스타일 변경\r\n   * isMo_isSub  : gsap 커스텀함수 호출, 휠비활성화, 로고텍스트 스타일 변경\r\n   * \r\n   */\r\n  const init = (swiper,activeIndx) =>{\r\n    setActIdx(activeIndx);\r\n    /**\r\n     * 변수 설정\r\n     */\r\n    const aside = document.querySelector('.aside'),\r\n          msgBox = document.querySelector('.chat-box'),\r\n          typoBox = document.querySelector('.typograpy-wrap'),\r\n          tagWrap = document.querySelector('.tag-wrap.main-tag'),\r\n          chatBtn = document.querySelector('.btn-chat'),\r\n          motagWrap = document.querySelector('.tag-wrap.momain-tag');\r\n\r\n    const _activeIdx= activeIndx;\r\n        \r\n    const isPc_isMain= ()=>{\r\n      typoBox.classList.remove('pc');\r\n      ToPcMain(typoBox);\r\n      swiperRef.current.swiper.mousewheel.enable();\r\n      transGsap(aside,'left','-9999px',1);\r\n    }\r\n    const isPc_isSub= ()=>{\r\n      transGsap(aside,'left','0',1);\r\n      ToPcSub(typoBox);\r\n      typoBox.classList.add('pc');\r\n      typoBox.classList.remove('top');\r\n      swiperRef.current.swiper.mousewheel.disable();\r\n    }\r\n    const isMo_isMain= ()=>{\r\n      mainResTypoGsap(typoBox);\r\n      typoBox.classList.remove('top');\r\n      swiperRef.current.swiper.mousewheel.disable();\r\n    }\r\n    const isMo_isSub= ()=>{\r\n      typoBox.classList.add('top');\r\n      mainResTypoGsap(typoBox,false);\r\n      swiperRef.current.swiper.mousewheel.disable();\r\n    }\r\n    /**\r\n     *  스와이퍼 변경될때 마다 activeIndex로 메인/ 서브 일때 gsap 함수 실행.\r\n     */\r\n    const setPositionFunc = (activeIndx=actIdx)=>{\r\n\r\n      if(activeIndx > 0){ //메인만 아니면\r\n          transGsap(msgBox,'right',-msgBox.offsetWidth,1); //msg 오로ㅡㄴ쪽으로 사라짐\r\n          transGsap(tagWrap,'left','-999px',0.5);\r\n          transGsap(motagWrap,'left','-999px',0.5);\r\n          transGsap(chatBtn,'left','-999px',0.5);\r\n  \r\n          if(deviceChk === 'pc' && !typoBox.classList.contains('pc')){ isPc_isSub();}\r\n          else if(deviceChk === \"mo\" && !typoBox.classList.contains('top')){ isMo_isSub();}\r\n\r\n      }else{ //메인이면\r\n          transGsap(msgBox,'right','0',1); \r\n          transGsap(motagWrap,'left','5.5%',0.5);\r\n          transGsap(tagWrap,'left','5.5%',0.5);\r\n          transGsap(chatBtn,'left','80%',0.5);\r\n          \r\n          if(deviceChk === 'pc' && !typoBox.classList.contains('top')){ isPc_isMain();} \r\n          else if(deviceChk === \"mo\" && typoBox.classList.contains('top')){ isMo_isMain();}\r\n      }\r\n    };\r\n    setPositionFunc(activeIndx);\r\n    /*\r\n     * resize 될때마다 바로 즉시 반응하게 \r\n      스토어에 저장한 값이 아닌 windeow.innerWidth로 바로 잡음.\r\n     */\r\n    const resize = () =>{\r\n      let winWid = window.innerWidth;\r\n\r\n      if(winWid > 768){ _activeIdx > 0 ?  isPc_isSub() : isPc_isMain()} //pc -> main or sub\r\n      else{\r\n        _activeIdx > 0 ? isMo_isSub() : isMo_isMain(false);}  //mo -> main or sub\r\n    }\r\n    window.addEventListener('resize',function () {\r\n      if(document.querySelectorAll('.wrapper').length > 0){\r\n        resize();\r\n      }\r\n      });\r\n  }\r\n  /**\r\n   * onChanged\r\n   * 메인 스와이퍼 인덱스 업데이트 함수 디스패치\r\n   * 현재 활성화된 인덱스 상태변경\r\n   * init 호출\r\n   */ \r\n  const onChanged = (swiper) =>{\r\n      dispatch(mainUpdate(swiper.activeIndex));\r\n      setActIdx(swiper.activeIndex);\r\n      init(swiper,swiper.activeIndex);\r\n  };\r\n  // 메인에 노출되는 원 컴포넌트\r\n  const CircleComp =  (\r\n    <>\r\n    <div className=\"circle-box\">\r\n      <div className=\"circle one\"><span></span></div>\r\n      <div className=\"circle two\"><span></span></div>\r\n      <div className=\"circle three\"><span></span></div>\r\n    </div>\r\n    </>\r\n  );\r\n \r\n  return (\r\n    <>\r\n    <div className=\"wrapper\">\r\n        {\r\n          deviceChk === \"mo\" && <MoMain/>\r\n        }\r\n        <Header deviceChk={deviceChk} actSec={list[mainActIdx]}/>\r\n        <Aside  deviceChk={deviceChk} actSec={list[mainActIdx]}/>\r\n        <MainTypeComp deviceChk={deviceChk}/>\r\n        <Swiper direction={'vertical'}  \r\n          navigation={{\r\n            nextEl: '.main-next',\r\n            prevEl: '.main-prev'\r\n        }} \r\n          speed = {1000}\r\n          slidesPerView={1}\r\n          spaceBetween={5}\r\n          onSlideChange = {onChanged}\r\n          mousewheel={true}\r\n          initialSlide={parseInt(mainActIdx)}\r\n          pagination={{\r\n              el: '.main-pagination',\r\n              clickable:true,\r\n              renderBullet: function (index, className) {\r\n                return `<span class=\"${className}\">  ${index ===0 ? 'Home' : (list[index])}</span>`;\r\n              },\r\n          }} \r\n          ref={swiperRef}\r\n          className=\"mainSwipper\">\r\n            <SwiperSlide>\r\n              {CircleComp}\r\n              {\r\n                deviceChk === \"pc\" && <MessageContainer/>\r\n              }\r\n            </SwiperSlide>\r\n            <SwiperSlide><About mainActIdx={mainActIdx}/></SwiperSlide>\r\n            <SwiperSlide><SlideComp cont={'project'}/></SwiperSlide>\r\n            <SwiperSlide><SlideComp cont={'prac'}/></SwiperSlide>\r\n        </Swiper>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { useLocation, Routes, Route } from \"react-router-dom\";\r\nimport \"../scss/transition.scss\";\r\nimport DetailPage from \"../pages/DetailPage\"\r\nimport Main from \"../pages/Main\"\r\n/*\r\n  Transition : react-transition-group 컴포넌트\r\n  left : 페이지 이동시 rigth => left\r\n  right : 페이지 이동시 left => right\r\n\r\n  router\r\n    Main\r\n    DetailPage : location, id id로 state 조회\r\n*/\r\nconst Transition = ({deviceChk,cursorOuterRef,cursorInnerRef}) => {\r\n\r\n  const location = useLocation();\r\n  const currentKey = location.pathname.split(\"/\")[1] || \"/\";\r\n  return (\r\n    <TransitionGroup  component='div' className=\"transition-group\">\r\n        <CSSTransition key={currentKey} timeout={{ enter: 1000, exit: 1000 }}  classNames={`${(currentKey===\"/\") ? \"left pageSlider\" : \"right pageSlider\"}`}\r\n          appear>\r\n        <Routes location={location}>\r\n            <Route path=\"/\" element={<Main  deviceChk={deviceChk} cursorOuterRef={cursorOuterRef} cursorInnerRef={cursorInnerRef} />} />\r\n            <Route path=\"/:id\" element={<DetailPage location={location} cursorOuterRef={cursorOuterRef} cursorInnerRef={cursorInnerRef}/>} />\r\n        </Routes>\r\n        </CSSTransition>\r\n  </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default Transition;","import React,{useEffect,useCallback,useRef,useState} from \"react\";\r\n\r\nexport default function  AnimatedCursor({cursorOuterRef,cursorInnerRef}){\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", onMouseMove);\r\n    }, [])\r\n   /*\r\n    cursorOuterRef : 마우스 포인터\r\n    cursorInnerRef : 따라가는 포인터\r\n    requestRef : animateOuterCursor의 변화 감지\r\n    endX, endY : 포인트 끝 도착한곳\r\n  */\r\n  const requestRef = useRef();\r\n  const [coords, setCoords] = useState({ x: 0, y: 0 });\r\n\r\n  let endX=0,\r\n      endY=0;\r\n\r\n  const onMouseMove = useCallback(({ clientX, clientY }) => {\r\n    setCoords({ x: clientX, y: clientY });\r\n    if(cursorInnerRef.current !== undefined){\r\n      cursorInnerRef.current.style.top = clientY + 'px';\r\n      cursorInnerRef.current.style.left = clientX + 'px';\r\n      endX = clientX;\r\n      endY = clientY;\r\n    }\r\n  }, [])\r\n  /*\r\n   * requestAnimationFrame : requestAnimationFrame(반복할 함수) , 스스로를 호출하지 않음.\r\n   */\r\n  let previousTime;\r\n  /*\r\n    animateOuterCursor : \r\n   */\r\n  const animateOuterCursor = useCallback(\r\n    (timestamp) => {\r\n      if (previousTime !== undefined) {\r\n        coords.x += (endX - coords.x) / 8;\r\n        coords.y += (endY - coords.y) / 8;\r\n        cursorOuterRef.current.style.top = coords.y + 'px';\r\n        cursorOuterRef.current.style.left = coords.x + 'px';\r\n      }\r\n      previousTime = timestamp;\r\n      requestRef.current = requestAnimationFrame(animateOuterCursor); //다시 호출\r\n    },\r\n    [requestRef]\r\n  )\r\n  useEffect(() => {\r\n      requestRef.current = requestAnimationFrame(animateOuterCursor); //호출 반복\r\n    }, [animateOuterCursor])\r\n\r\n  return (\r\n    <>\r\n      <div ref={cursorOuterRef} className=\"cursor cursorOuter\"/>\r\n      <div ref={cursorInnerRef} className=\"cursor cursorInner\"/>\r\n    </>\r\n  )\r\n}\r\n","import React,{useEffect,useRef} from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {deviceUpdate} from \"../module/ui\";\r\nimport Transition from \"../component/Transition\"\r\nimport AnimatedCursor from \"../component/AnimatedCursor\";\r\n/*\r\n    MainContainer : module > ui 의 컨테이너 컴포넌트\r\n    윈도우 사이즈 pc, mobile 상태변경\r\n*/\r\n\r\nfunction MainContainer(){\r\n    /*\r\n        deviceChk : 현재 device state, AnimatedCursor 에 props 전달\r\n     */\r\n    let deviceChk = useSelector(state=>state.ui.device);\r\n    const dispatch = useDispatch();\r\n    /*\r\n        onUpdateDevice : device update 하는 디스패치 함수 , Transition 에 props 전달\r\n     */\r\n    const onUpdateDevice = (device) => dispatch(deviceUpdate(device)); \r\n\r\n\r\n    useEffect(()=>{\r\n        init();\r\n        window.addEventListener('resize', init);\r\n    },[]);\r\n    /**\r\n     * init : useEffect 에서 호출, resize될때마다 호출\r\n     * window size 768 기준으로 pc, mobile로 state update\r\n     */\r\n    const init = () =>{\r\n        let winWid = window.innerWidth;\r\n        winWid > 768 ? onUpdateDevice('pc') : onUpdateDevice('mo');\r\n    }\r\n    /*\r\n        AnimatedCursor에서도 사용하고 Transition > Main 에서도 사용하기 위해\r\n        현재 위치에서 선언. \r\n        Ref 선언 이유 : 페이지 이동후 돌아오거나 리렌더링 될때 타겟 잃어버리지 않기 위해\r\n\r\n        cursorOuterRef : 마우스 포인터\r\n        cursorInnerRef : 따라가는 포인터\r\n    */\r\n    const cursorOuterRef = useRef();\r\n    const cursorInnerRef = useRef();\r\n\r\n    return (\r\n        <>\r\n            <AnimatedCursor deviceChk={deviceChk} cursorOuterRef={cursorOuterRef} cursorInnerRef={cursorInnerRef} />\r\n            <Transition onUpdateDevice={onUpdateDevice} deviceChk={deviceChk} cursorOuterRef={cursorOuterRef} cursorInnerRef={cursorInnerRef}/>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MainContainer;","import './scss/import.scss'\r\nimport MainContainer from \"./container/MainContainer\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <MainContainer/>\r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport messages from './messages';\r\nimport ui from './ui';\r\n\r\nconst rootReducer = combineReducers({\r\n    messages,\r\n    ui\r\n})\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'; \r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './module';\r\nimport logger from 'redux-logger';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(ReduxThunk));\r\nReactDOM.render(\r\n  <Provider store= {store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n "],"sourceRoot":""}